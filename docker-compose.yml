version: "3"

services:
  freegpt35:
    image: missuo/freegpt35:latest
    restart: always
    ports:
      - "3040:3040"
  postgres:
    image: pgvector/pgvector:pg16
    healthcheck:
      test: pg_isready -U $POSTGRES_USER
      start_interval: 1s
      start_period: 5s
      interval: 5s
      retries: 5
    ports:
      - "5433:5432"
    env_file:
      - .env
    volumes:
      - ./postgres-volume:/var/lib/postgresql/data
  postgres-setup:
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/migrations:/migrations
    env_file:
      - .env
    command: ["-path", "/migrations", "-database", "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:$POSTGRES_PORT/$POSTGRES_DB?sslmode=disable", "up"]
  backend:
    container_name: opengpts-backend
    build:
      context: backend
    ports:
      - "8100:8000" # Backend is accessible on localhost:8100
    depends_on:
      postgres-setup:
        condition: service_completed_successfully
    env_file:
      - .env
    volumes:
      - ./backend:/backend
    environment:
      POSTGRES_HOST: "postgres"
    command:
      - --reload
  frontend:
    container_name: opengpts-frontend
    build:
      context: frontend
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend/src:/frontend/src
    ports:
      - "5173:5173" # Frontend is accessible on localhost:5173
    environment:
      VITE_BACKEND_URL: "http://backend:8000"

  nginx:
    container_name: opengpts-nginx
    image: nginx:latest
    ports:
      - "443:443"
    volumes:
      - ./frontend/dist:/var/www/html
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend

  ollama:
    container_name: ollama
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ./ollama:/root/.ollama

  ollama-webui:
    image: ghcr.io/ollama-webui/ollama-webui:main
    container_name: ollama-webui
    volumes:
      - ./ollama-webui:/app/backend/data
    depends_on:
      - ollama
    ports:
      - 80:8080
    environment:
      - 'OLLAMA_API_BASE_URL=http://ollama:11434/api'
